#include <iostream>
#include <stdio.h>
#include <pthread.h>

struct sum_runner_struct{
    long long limit;
    long long answer;
};

//Thread function to generate sum of 0 to N
void* sum_runner(void* arg){
    struct sum_runner_struct *arg_struct = (struct sum_runner_struct*) arg;

    long long sum = 0;
    for(int i = 0; i <= arg_struct->limit; i++){
        sum += i;
    }
    // Sum is global variable
    arg_struct->answer = sum;
    pthread_exit(nullptr);
}

int main(int argc, char **argv) {

    //Check if input is valid
    if(argc < 2){
        printf("Usage: %s <num>\n", argv[0]);
        exit(-1);
    }

    int num_args = argc - 1;

    struct sum_runner_struct args[num_args];

    //Launch thread
    pthread_t tid[num_args];
    for(int i = 0; i < num_args; i++){
        args[i].limit = atoll(argv[i+1]);

        pthread_attr_t attr;
        pthread_attr_init(&attr);
        pthread_create(&tid[i], &attr, sum_runner, &args[i]);
    }


    //TODO: Could do other thing here!!

    //Wait until thread is done
    for(int i = 0; i < num_args; i++) {
        pthread_join(tid[i], nullptr);
        printf(" %lld\n", args[i].answer);
    }


    return EXIT_SUCCESS;
}